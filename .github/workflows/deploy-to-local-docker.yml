name: Deploy to Local Docker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build JAR with Maven
        run: mvn clean package

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build Docker image
        run: docker build -t my-java-app .

      - name: List Docker images (for debugging)
        run: docker images

      - name: Get image ID for my-java-app
        id: get_image_id
        run: |
          IMAGE_ID=$(docker-compose images -q my-java-app)
          if [ -z "$IMAGE_ID" ]; then
          echo "No image ID found for my-java-app. Exiting."
          exit 1
          fi
          echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV

      - name: Save Docker image
        if: success()
        run: |
          docker save -o my-java-app.tar $IMAGE_ID

      - name: Copy Docker image to server
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: ./my-java-app.tar
          target: ~/my-java-app.tar

      - name: Deploy Docker image and restart container on server
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker load -i ~/my-java-app.tar
            cd /docker-compose
            docker-compose down
            docker-compose up -d
